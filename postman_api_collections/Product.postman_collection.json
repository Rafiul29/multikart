{
	"info": {
		"_postman_id": "2c7b94f6-4b6f-45be-b728-eaa7b3c31456",
		"name": "Product",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "18394254",
		"_collection_link": "https://orange-star-930441.postman.co/workspace/multikart~d17ee550-962a-4b7d-afc6-cb32cba27b79/collection/18394254-2c7b94f6-4b6f-45be-b728-eaa7b3c31456?action=share&source=collection_link&creator=18394254"
	},
	"item": [
		{
			"name": "Add a new Product",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Helper function to generate random string",
							"function generateRandomString(length) {",
							"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++) {",
							"        result += chars[Math.floor(Math.random() * chars.length)];",
							"    }",
							"    return result;",
							"}",
							"",
							"// Set random string values",
							"pm.environment.set(\"name\", \"Product-\" + generateRandomString(6));",
							"pm.environment.set(\"description\", \"Description: \" + generateRandomString(20));",
							"pm.environment.set(\"price\", Math.floor(Math.random() * 5000) + 100);",
							"pm.environment.set(\"stock\", Math.floor(Math.random() * 100) + 1);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/api/v1/products/"
			},
			"response": [
				{
					"name": "401 Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"fw\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 16:37:29 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "WWW-Authenticate",
							"value": "Bearer realm=\"api\""
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "183"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"detail\": \"Given token not valid for any token type\",\n    \"code\": \"token_not_valid\",\n    \"messages\": [\n        {\n            \"token_class\": \"AccessToken\",\n            \"token_type\": \"access\",\n            \"message\": \"Token is invalid or expired\"\n        }\n    ]\n}"
				},
				{
					"name": "400 Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 16:45:59 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "213"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"name\": \"This field is required.\",\n        \"description\": \"This field is required.\",\n        \"price\": \"This field is required.\",\n        \"stock\": \"This field is required.\",\n        \"vendor\": \"Invalid data. Expected a dictionary, but got int.\"\n    }\n}"
				},
				{
					"name": "400 Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"laptop\",\n        \"description\": \"this is a laptop\",\n        \"price\": -1,\n        \"stock\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 17:15:19 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "90"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"price\": \"Price must be greater than zero.\",\n        \"stock\": \"Stock cannot be negative.\"\n    }\n}"
				},
				{
					"name": "Add a new Product-201 Created",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/"
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:28:58 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "325"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 7,\n        \"name\": \"Product-0ZDuFM\",\n        \"description\": \"Description: qss2gTmjfmcxV9Utsyoc\",\n        \"price\": \"4453.00\",\n        \"stock\": 39,\n        \"vendor\": {\n            \"id\": 15,\n            \"store_name\": \"this is my book\",\n            \"user\": {\n                \"id\": 3,\n                \"username\": \"rafiul1\",\n                \"email\": \"rafiul1123@gmail.com\",\n                \"first_name\": \"Rafiul\",\n                \"last_name\": \"Islam\",\n                \"role\": \"vendor\"\n            }\n        }\n    },\n    \"success\": \"Product created.\"\n}"
				}
			]
		},
		{
			"name": "Retrive all Product",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/products/?min_price=100&max_price=1000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						""
					],
					"query": [
						{
							"key": "min_price",
							"value": "100"
						},
						{
							"key": "max_price",
							"value": "1000"
						}
					]
				}
			},
			"response": [
				{
					"name": "401 Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products?page=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 17:37:49 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "WWW-Authenticate",
							"value": "Bearer realm=\"api\""
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "183"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"detail\": \"Given token not valid for any token type\",\n    \"code\": \"token_not_valid\",\n    \"messages\": [\n        {\n            \"token_class\": \"AccessToken\",\n            \"token_type\": \"access\",\n            \"message\": \"Token is invalid or expired\"\n        }\n    ]\n}"
				},
				{
					"name": "retrive all product from vendor user 200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 17:49:12 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "366"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": 5,\n            \"name\": \"laptop\",\n            \"description\": \"this is a laptop\",\n            \"price\": \"11.00\",\n            \"stock\": 11,\n            \"vendor\": {\n                \"id\": 15,\n                \"store_name\": \"this is my book\",\n                \"user\": {\n                    \"id\": 3,\n                    \"username\": \"rafiul1\",\n                    \"email\": \"rafiul1123@gmail.com\",\n                    \"first_name\": \"Rafiul\",\n                    \"last_name\": \"Islam\",\n                    \"role\": \"vendor\"\n                }\n            }\n        }\n    ],\n    \"pagination\": {\n        \"count\": 1,\n        \"next\": null,\n        \"previous\": null\n    },\n    \"success\": \"Fetched vendors successfully.\"\n}"
				},
				{
					"name": "Retrive all Product from all user without authentication--200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 17:50:45 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "401"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"laptop\",\n            \"description\": \"this is a laptop\",\n            \"price\": \"11.00\",\n            \"stock\": 11,\n            \"vendor\": {\n                \"id\": 14,\n                \"store_name\": \"eqeeqqwee\",\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"rafiul\",\n                    \"email\": \"rafiul123@gmail.com\",\n                    \"first_name\": \"Rafiul\",\n                    \"last_name\": \"Islam\",\n                    \"role\": \"vendor\"\n                }\n            }\n        }\n    ],\n    \"pagination\": {\n        \"count\": 5,\n        \"next\": \"http://127.0.0.1:8000/api/v1/products/?page=2\",\n        \"previous\": null\n    },\n    \"success\": \"Fetched vendors successfully.\"\n}"
				},
				{
					"name": "filter and search product",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/?min_price=100&max_price=1000&ordering=price&search=product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							],
							"query": [
								{
									"key": "min_price",
									"value": "100"
								},
								{
									"key": "max_price",
									"value": "1000"
								},
								{
									"key": "ordering",
									"value": "price"
								},
								{
									"key": "search",
									"value": "product"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 19 Apr 2025 13:59:15 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "635"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": 9,\n            \"name\": \"Product-vZYXhj\",\n            \"description\": \"Description: 3h2epQ8RLPY84q2YL7E8\",\n            \"price\": \"270.00\",\n            \"stock\": 1,\n            \"vendor\": {\n                \"id\": 15,\n                \"store_name\": \"ShopVista\",\n                \"user\": {\n                    \"id\": 3,\n                    \"username\": \"rafiul1\",\n                    \"email\": \"rafiul1123@gmail.com\",\n                    \"first_name\": \"Rafiul\",\n                    \"last_name\": \"Islam\"\n                }\n            }\n        },\n        {\n            \"id\": 10,\n            \"name\": \"Product-hbJiCL\",\n            \"description\": \"Description: X8pFgLnBSpj8r2PjWWxO\",\n            \"price\": \"681.00\",\n            \"stock\": 29,\n            \"vendor\": {\n                \"id\": 15,\n                \"store_name\": \"ShopVista\",\n                \"user\": {\n                    \"id\": 3,\n                    \"username\": \"rafiul1\",\n                    \"email\": \"rafiul1123@gmail.com\",\n                    \"first_name\": \"Rafiul\",\n                    \"last_name\": \"Islam\"\n                }\n            }\n        }\n    ],\n    \"pagination\": {\n        \"count\": 2,\n        \"next\": null,\n        \"previous\": null\n    },\n    \"success\": \"Fetched Product successfully.\"\n}"
				},
				{
					"name": "429 Too Many Requests",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/?min_price=100&max_price=1000&ordering=price&search=product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							],
							"query": [
								{
									"key": "min_price",
									"value": "100"
								},
								{
									"key": "max_price",
									"value": "1000"
								},
								{
									"key": "ordering",
									"value": "price"
								},
								{
									"key": "search",
									"value": "product"
								}
							]
						}
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 20 Apr 2025 05:14:23 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Retry-After",
							"value": "86384"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "72"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"detail\": \"Request was throttled. Expected available in 86384 seconds.\"\n}"
				}
			]
		},
		{
			"name": "retrive single product",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Helper function to generate random string",
							"function generateRandomString(length) {",
							"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++) {",
							"        result += chars[Math.floor(Math.random() * chars.length)];",
							"    }",
							"    return result;",
							"}",
							"",
							"// Set random string values",
							"pm.environment.set(\"name\", \"Product-\" + generateRandomString(6));",
							"pm.environment.set(\"description\", \"Description: \" + generateRandomString(20));",
							"pm.environment.set(\"price\", Math.floor(Math.random() * 5000) + 100);",
							"pm.environment.set(\"stock\", Math.floor(Math.random() * 100) + 1);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/api/v1/products/2/"
			},
			"response": [
				{
					"name": "401 Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/3/"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 19:12:41 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "WWW-Authenticate",
							"value": "Bearer realm=\"api\""
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "183"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"detail\": \"Given token not valid for any token type\",\n    \"code\": \"token_not_valid\",\n    \"messages\": [\n        {\n            \"token_class\": \"AccessToken\",\n            \"token_type\": \"access\",\n            \"message\": \"Token is invalid or expired\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update Product hole document -Put Method",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Helper function to generate random string",
							"function generateRandomString(length) {",
							"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++) {",
							"        result += chars[Math.floor(Math.random() * chars.length)];",
							"    }",
							"    return result;",
							"}",
							"",
							"// Set random string values",
							"pm.environment.set(\"name\", \"Product-\" + generateRandomString(6));",
							"pm.environment.set(\"description\", \"Description: \" + generateRandomString(20));",
							"pm.environment.set(\"price\", Math.floor(Math.random() * 5000) + 100);",
							"pm.environment.set(\"stock\", Math.floor(Math.random() * 100) + 1);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/api/v1/products/7/"
			},
			"response": [
				{
					"name": "Update product - 200 OK",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/7/"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:37:20 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "325"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 7,\n        \"name\": \"Product-6CmsAO\",\n        \"description\": \"Description: xYBZvrvQzza6odLr10jr\",\n        \"price\": \"4514.00\",\n        \"stock\": 10,\n        \"vendor\": {\n            \"id\": 15,\n            \"store_name\": \"this is my book\",\n            \"user\": {\n                \"id\": 3,\n                \"username\": \"rafiul1\",\n                \"email\": \"rafiul1123@gmail.com\",\n                \"first_name\": \"Rafiul\",\n                \"last_name\": \"Islam\",\n                \"role\": \"vendor\"\n            }\n        }\n    },\n    \"success\": \"Product updated.\"\n}"
				},
				{
					"name": "404 Not Found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/1/"
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:40:38 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Product not found or not owned by you.\"\n}"
				},
				{
					"name": "401 Unauthorized",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/1/"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:41:19 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "WWW-Authenticate",
							"value": "Bearer realm=\"api\""
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "183"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"detail\": \"Given token not valid for any token type\",\n    \"code\": \"token_not_valid\",\n    \"messages\": [\n        {\n            \"token_class\": \"AccessToken\",\n            \"token_type\": \"access\",\n            \"message\": \"Token is invalid or expired\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update Product selected field -Patch Method",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Helper function to generate random string",
							"function generateRandomString(length) {",
							"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++) {",
							"        result += chars[Math.floor(Math.random() * chars.length)];",
							"    }",
							"    return result;",
							"}",
							"",
							"// Set random string values",
							"pm.environment.set(\"name\", \"Product-\" + generateRandomString(6));",
							"pm.environment.set(\"description\", \"Description: \" + generateRandomString(20));",
							"pm.environment.set(\"price\", Math.floor(Math.random() * 5000) + 100);",
							"pm.environment.set(\"stock\", Math.floor(Math.random() * 100) + 1);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/api/v1/products/10/"
			},
			"response": [
				{
					"name": "401 Unauthorized",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/1/"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:41:19 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "WWW-Authenticate",
							"value": "Bearer realm=\"api\""
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "183"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"detail\": \"Given token not valid for any token type\",\n    \"code\": \"token_not_valid\",\n    \"messages\": [\n        {\n            \"token_class\": \"AccessToken\",\n            \"token_type\": \"access\",\n            \"message\": \"Token is invalid or expired\"\n        }\n    ]\n}"
				},
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/7/"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:53:44 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "335"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 7,\n        \"name\": \"Product-yv7wMY\",\n        \"description\": \"Description: RgDQsDSHpnE2n2Z2fBz4\",\n        \"price\": \"2713.00\",\n        \"stock\": 79,\n        \"vendor\": {\n            \"id\": 15,\n            \"store_name\": \"this is my book\",\n            \"user\": {\n                \"id\": 3,\n                \"username\": \"rafiul1\",\n                \"email\": \"rafiul1123@gmail.com\",\n                \"first_name\": \"Rafiul\",\n                \"last_name\": \"Islam\",\n                \"role\": \"vendor\"\n            }\n        }\n    },\n    \"success\": \"Product partially updated.\"\n}"
				},
				{
					"name": "404 Not Found",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/10/"
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:56:13 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Product not found or not owned by you.\"\n}"
				}
			]
		},
		{
			"name": "delete product",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Helper function to generate random string",
							"function generateRandomString(length) {",
							"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++) {",
							"        result += chars[Math.floor(Math.random() * chars.length)];",
							"    }",
							"    return result;",
							"}",
							"",
							"// Set random string values",
							"pm.environment.set(\"name\", \"Product-\" + generateRandomString(6));",
							"pm.environment.set(\"description\", \"Description: \" + generateRandomString(20));",
							"pm.environment.set(\"price\", Math.floor(Math.random() * 5000) + 100);",
							"pm.environment.set(\"stock\", Math.floor(Math.random() * 100) + 1);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/api/v1/products/7/"
			},
			"response": [
				{
					"name": "404 Not Found",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/10/"
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 18:59:37 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "29"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Product not found\"\n}"
				},
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"description\": \"{{description}}\",\n  \"price\": {{price}},\n  \"stock\": {{stock}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/products/7/"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 18 Apr 2025 19:00:12 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.8.10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "30"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": \"Product deleted.\"\n}"
				}
			]
		}
	]
}